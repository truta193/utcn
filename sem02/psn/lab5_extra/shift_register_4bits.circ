<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project source="3.8.0" version="1.0">
  This file is intended to be loaded by Logisim-evolution v3.8.0(https://github.com/logisim-evolution/).

  <lib desc="#Wiring" name="0">
    <tool name="Pin">
      <a name="appearance" val="classic"/>
    </tool>
  </lib>
  <lib desc="#Gates" name="1"/>
  <lib desc="#Plexers" name="2"/>
  <lib desc="#Arithmetic" name="3"/>
  <lib desc="#Memory" name="4"/>
  <lib desc="#I/O" name="5"/>
  <lib desc="#TTL" name="6"/>
  <lib desc="#TCL" name="7"/>
  <lib desc="#Base" name="8"/>
  <lib desc="#BFH-Praktika" name="9"/>
  <lib desc="#Input/Output-Extra" name="10"/>
  <lib desc="#Soc" name="11"/>
  <main name="main"/>
  <options>
    <a name="gateUndefined" val="ignore"/>
    <a name="simlimit" val="1000"/>
    <a name="simrand" val="0"/>
  </options>
  <mappings>
    <tool lib="8" map="Button2" name="Poke Tool"/>
    <tool lib="8" map="Button3" name="Menu Tool"/>
    <tool lib="8" map="Ctrl Button1" name="Menu Tool"/>
  </mappings>
  <toolbar>
    <tool lib="8" name="Poke Tool"/>
    <tool lib="8" name="Edit Tool"/>
    <tool lib="8" name="Wiring Tool"/>
    <tool lib="8" name="Text Tool"/>
    <sep/>
    <tool lib="0" name="Pin"/>
    <tool lib="0" name="Pin">
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
    </tool>
    <sep/>
    <tool lib="1" name="NOT Gate"/>
    <tool lib="1" name="AND Gate"/>
    <tool lib="1" name="OR Gate"/>
    <tool lib="1" name="XOR Gate"/>
    <tool lib="1" name="NAND Gate"/>
    <tool lib="1" name="NOR Gate"/>
    <sep/>
    <tool lib="4" name="D Flip-Flop"/>
    <tool lib="4" name="Register"/>
  </toolbar>
  <circuit name="main">
    <a name="appearance" val="logisim_evolution"/>
    <a name="circuit" val="main"/>
    <a name="circuitnamedboxfixedsize" val="true"/>
    <a name="downloadBoard" val="BASYS3"/>
    <a name="simulationFrequency" val="2.0"/>
    <boardmap boardname="BASYS3">
      <mc key="/CLOCK" map="321,237"/>
      <mc key="/INPT" map="78,323"/>
      <mc key="/OUTP" pmap="203_295_0,168_295_0,131_295_0,92_295_0"/>
      <mc key="/RESET" map="647,323"/>
    </boardmap>
    <comp lib="0" loc="(580,250)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="label" val="CLOCK"/>
    </comp>
    <comp lib="0" loc="(590,270)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="label" val="RESET"/>
    </comp>
    <comp lib="0" loc="(590,290)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="label" val="INPT"/>
    </comp>
    <comp lib="0" loc="(860,250)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="facing" val="west"/>
      <a name="label" val="OUTP"/>
      <a name="output" val="true"/>
      <a name="width" val="4"/>
    </comp>
    <comp loc="(860,250)" name="shift_register4b">
      <a name="appearance" val="logisim_evolution"/>
      <a name="label" val="shift_register4b_1"/>
    </comp>
    <wire from="(580,250)" to="(640,250)"/>
    <wire from="(590,270)" to="(640,270)"/>
    <wire from="(590,290)" to="(640,290)"/>
  </circuit>
  <vhdl name="shift_register4b">LIBRARY ieee;&#13;
USE ieee.std_logic_1164.all;&#13;
USE ieee.std_logic_unsigned.all;
&#13;
ENTITY shift_register4b IS&#13;
  PORT (&#13;
	CLK, RST, INPT : in std_logic;
	OUTP : out std_logic_vector(3 downto 0)
    );&#13;
END shift_register4b;&#13;
&#13;
--------------------------------------------------------------------------------&#13;
--Complete your VHDL description below&#13;
--------------------------------------------------------------------------------&#13;
&#13;
ARCHITECTURE structr OF shift_register4b IS&#13;
&#13;	component bistabil_d IS
	  PORT (
		CLK: in std_logic;
		D, S, R: in std_logic;
		Q: out std_logic
	    );
	END component;
	
	component divizor_f IS
	  PORT (
	  	CLK_100: in std_logic;
	  	RST: in std_logic;
	  	CLK_1: out std_logic
		);
	END component;
	signal W1, W2, W3 , CLK1: std_logic;
BEGIN&#13;
	DC : divizor_f port map (CLK, RST, CLK1);
&#13;	D0: bistabil_d port map (CLK1, INPT, '1', RST, W1);
	OUTP(3) &lt;= W1;
	D1 : bistabil_d port map (CLK1, W1, '1', RST, W2);
	OUTP(2) &lt;= W2;
	D2 : bistabil_d port map (CLK1, W2, '1', RST, W3);
	OUTP(1) &lt;= W3;
	D3 : bistabil_d port map (CLK1, W3, '1', RST, OUTP(0));
&#13;
END structr;&#13;



LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_unsigned.all;

ENTITY bistabil_d IS
  PORT (
	CLK: in std_logic;
	D, S, R: in std_logic;
	Q: out std_logic
    );
END bistabil_d;


ARCHITECTURE compr OF bistabil_d IS

BEGIN

	process(CLK)
	begin
		if rising_edge(CLK) then
			if (S = '0') then
				Q &lt;= '1';
			elsif (R = '0') then
				Q &lt;= '0';
			else 
				Q &lt;= D;
			end if;
		end if;
	end process;

END compr;

LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_unsigned.all;

ENTITY divizor_f IS
  PORT (
  	CLK_100: in std_logic;
  	RST: in std_logic;
  	CLK_1: out std_logic
	);
END divizor_f;


ARCHITECTURE comportm OF divizor_f IS

BEGIN

	process(CLK_100)
	variable nr: std_logic_vector (25 downto 0) := (others =&gt; '0');
	begin
		if rising_edge(CLK_100) then
			if RST = '0' then
				nr := (others =&gt; '0');
			else
				nr := nr + 1;
			end if;
		end if;
		CLK_1 &lt;= nr(25);
	end process;

END comportm;


</vhdl>
</project>
