<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project source="3.8.0" version="1.0">
  This file is intended to be loaded by Logisim-evolution v3.8.0(https://github.com/logisim-evolution/).

  <lib desc="#Wiring" name="0">
    <tool name="Pin">
      <a name="appearance" val="classic"/>
    </tool>
  </lib>
  <lib desc="#Gates" name="1"/>
  <lib desc="#Plexers" name="2"/>
  <lib desc="#Arithmetic" name="3"/>
  <lib desc="#Memory" name="4"/>
  <lib desc="#I/O" name="5"/>
  <lib desc="#TTL" name="6"/>
  <lib desc="#TCL" name="7"/>
  <lib desc="#Base" name="8"/>
  <lib desc="#BFH-Praktika" name="9"/>
  <lib desc="#Input/Output-Extra" name="10"/>
  <lib desc="#Soc" name="11"/>
  <main name="main"/>
  <options>
    <a name="gateUndefined" val="ignore"/>
    <a name="simlimit" val="1000"/>
    <a name="simrand" val="0"/>
  </options>
  <mappings>
    <tool lib="8" map="Button2" name="Poke Tool"/>
    <tool lib="8" map="Button3" name="Menu Tool"/>
    <tool lib="8" map="Ctrl Button1" name="Menu Tool"/>
  </mappings>
  <toolbar>
    <tool lib="8" name="Poke Tool"/>
    <tool lib="8" name="Edit Tool"/>
    <tool lib="8" name="Wiring Tool"/>
    <tool lib="8" name="Text Tool"/>
    <sep/>
    <tool lib="0" name="Pin"/>
    <tool lib="0" name="Pin">
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
    </tool>
    <sep/>
    <tool lib="1" name="NOT Gate"/>
    <tool lib="1" name="AND Gate"/>
    <tool lib="1" name="OR Gate"/>
    <tool lib="1" name="XOR Gate"/>
    <tool lib="1" name="NAND Gate"/>
    <tool lib="1" name="NOR Gate"/>
    <sep/>
    <tool lib="4" name="D Flip-Flop"/>
    <tool lib="4" name="Register"/>
  </toolbar>
  <circuit name="main">
    <a name="appearance" val="logisim_evolution"/>
    <a name="circuit" val="main"/>
    <a name="circuitnamedboxfixedsize" val="true"/>
    <a name="simulationFrequency" val="1.0"/>
    <comp lib="0" loc="(200,130)" name="Pin">
      <a name="appearance" val="NewPins"/>
    </comp>
    <comp lib="0" loc="(200,150)" name="Pin">
      <a name="appearance" val="NewPins"/>
    </comp>
    <comp lib="0" loc="(480,130)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
    </comp>
    <comp lib="0" loc="(480,150)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
    </comp>
    <comp lib="0" loc="(480,170)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
    </comp>
    <comp loc="(480,130)" name="comparator1">
      <a name="appearance" val="logisim_evolution"/>
    </comp>
    <wire from="(200,130)" to="(260,130)"/>
    <wire from="(200,150)" to="(260,150)"/>
    <wire from="(260,120)" to="(260,130)"/>
  </circuit>
  <vhdl name="comparator1">LIBRARY ieee;&#13;
USE ieee.std_logic_1164.all;&#13;
&#13;
ENTITY comparator1 IS&#13;
  PORT (&#13;
	A, B : in std_logic;
	X, Y, Z: out std_logic
    );&#13;
END comparator1;&#13;

ARCHITECTURE structural OF comparator1 IS&#13;
	component ANDG 
		port ( A, B : in std_logic;
			O : out std_logic
			);
	end component;
	component XNORG 
		port ( A, B : in std_logic;
			O : out std_logic
			);
	end component;
		component NOTG 
		port ( A : in std_logic;
			O : out std_logic
			);
	end component;
	signal W1, W2 : std_logic;
&#13;
BEGIN&#13;
&#13;	N1: NOTG port map(A, W1);
	N2: NOTG port map(B, W2);
	A1: ANDG port map(A, W2, X);
	A2: ANDG port map(W1, B, Z);
	XN1: XNORG port map(A, B, Y);
END structural;&#13;



LIBRARY ieee;
USE ieee.std_logic_1164.all;
entity ANDG is
	port ( A, B : in std_logic;
		O : out std_logic
		);
end ANDG;

architecture flux of ANDG is
begin
	O &lt;= A and B;
end architecture flux;



LIBRARY ieee;
USE ieee.std_logic_1164.all;
entity XNORG is
	port ( A, B : in std_logic;
		O : out std_logic
		);
end XNORG;

architecture flux of XNORG is
begin
	O &lt;= A xnor B;
end architecture flux;



LIBRARY ieee;
USE ieee.std_logic_1164.all;
entity NOTG is
	port ( A : in std_logic;
		O : out std_logic
		);
end NOTG;

architecture flux of NOTG is
begin
	O &lt;= not A;
end architecture flux;



</vhdl>
</project>
