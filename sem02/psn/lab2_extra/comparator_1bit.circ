<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project source="3.8.0" version="1.0">
  This file is intended to be loaded by Logisim-evolution v3.8.0(https://github.com/logisim-evolution/).

  <lib desc="#Wiring" name="0">
    <tool name="Pin">
      <a name="appearance" val="classic"/>
    </tool>
  </lib>
  <lib desc="#Gates" name="1"/>
  <lib desc="#Plexers" name="2"/>
  <lib desc="#Arithmetic" name="3"/>
  <lib desc="#Memory" name="4"/>
  <lib desc="#I/O" name="5"/>
  <lib desc="#TTL" name="6"/>
  <lib desc="#TCL" name="7"/>
  <lib desc="#Base" name="8"/>
  <lib desc="#BFH-Praktika" name="9"/>
  <lib desc="#Input/Output-Extra" name="10"/>
  <lib desc="#Soc" name="11"/>
  <main name="main"/>
  <options>
    <a name="gateUndefined" val="ignore"/>
    <a name="simlimit" val="1000"/>
    <a name="simrand" val="0"/>
  </options>
  <mappings>
    <tool lib="8" map="Button2" name="Poke Tool"/>
    <tool lib="8" map="Button3" name="Menu Tool"/>
    <tool lib="8" map="Ctrl Button1" name="Menu Tool"/>
  </mappings>
  <toolbar>
    <tool lib="8" name="Poke Tool"/>
    <tool lib="8" name="Edit Tool"/>
    <tool lib="8" name="Wiring Tool"/>
    <tool lib="8" name="Text Tool"/>
    <sep/>
    <tool lib="0" name="Pin"/>
    <tool lib="0" name="Pin">
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
    </tool>
    <sep/>
    <tool lib="1" name="NOT Gate"/>
    <tool lib="1" name="AND Gate"/>
    <tool lib="1" name="OR Gate"/>
    <tool lib="1" name="XOR Gate"/>
    <tool lib="1" name="NAND Gate"/>
    <tool lib="1" name="NOR Gate"/>
    <sep/>
    <tool lib="4" name="D Flip-Flop"/>
    <tool lib="4" name="Register"/>
  </toolbar>
  <circuit name="main">
    <a name="appearance" val="logisim_evolution"/>
    <a name="circuit" val="main"/>
    <a name="circuitnamedboxfixedsize" val="true"/>
    <a name="downloadBoard" val="BASYS3"/>
    <a name="simulationFrequency" val="1.0"/>
    <boardmap boardname="BASYS3">
      <mc key="/Input_1" map="609,323"/>
      <mc key="/Input_2" map="647,323"/>
      <mc key="/Output_1" map="577,295"/>
      <mc key="/Output_2" map="612,295"/>
      <mc key="/Output_3" map="649,295"/>
    </boardmap>
    <comp lib="0" loc="(210,240)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="label" val="Input_1"/>
    </comp>
    <comp lib="0" loc="(220,280)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="label" val="Input_2"/>
    </comp>
    <comp lib="0" loc="(610,240)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="facing" val="west"/>
      <a name="label" val="Output_1"/>
      <a name="output" val="true"/>
    </comp>
    <comp lib="0" loc="(610,270)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="facing" val="west"/>
      <a name="label" val="Output_2"/>
      <a name="output" val="true"/>
    </comp>
    <comp lib="0" loc="(610,300)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="facing" val="west"/>
      <a name="label" val="Output_3"/>
      <a name="output" val="true"/>
    </comp>
    <comp loc="(510,250)" name="comparator1">
      <a name="appearance" val="logisim_evolution"/>
      <a name="label" val="comparator1_1"/>
    </comp>
    <wire from="(210,240)" to="(290,240)"/>
    <wire from="(220,280)" to="(290,280)"/>
    <wire from="(290,240)" to="(290,250)"/>
    <wire from="(290,270)" to="(290,280)"/>
    <wire from="(510,250)" to="(610,250)"/>
    <wire from="(510,270)" to="(610,270)"/>
    <wire from="(510,290)" to="(610,290)"/>
    <wire from="(610,240)" to="(610,250)"/>
    <wire from="(610,290)" to="(610,300)"/>
  </circuit>
  <vhdl name="comparator1">LIBRARY ieee;&#13;
USE ieee.std_logic_1164.all;&#13;
&#13;
ENTITY comparator1 IS&#13;
  PORT (&#13;
	A, B: in std_logic;
	LESS, GREATER, EQUAL: out std_logic
    );&#13;
END comparator1;&#13;
&#13;
&#13;
ARCHITECTURE TypeArchitecture OF comparator1 IS&#13;
BEGIN&#13;
&#13;	process(A,B) 
	begin
		if A &lt; B then 
			LESS &lt;= '1';
			GREATER &lt;= '0';
			EQUAL &lt;= '0';
		elsif A &gt; B then
			GREATER &lt;= '1';
			LESS &lt;= '0';
			EQUAL &lt;= '0';
		else
			LESS &lt;= '0';
			GREATER &lt;= '0';
			EQUAL &lt;= '1';
		end if;
	end process;
&#13;
END TypeArchitecture;&#13;
</vhdl>
</project>
