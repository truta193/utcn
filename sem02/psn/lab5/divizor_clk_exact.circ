<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project source="3.7.2" version="1.0">
  This file is intended to be loaded by Logisim-evolution v3.7.2(https://github.com/logisim-evolution/).

  <lib desc="#Wiring" name="0">
    <tool name="Pin">
      <a name="appearance" val="classic"/>
    </tool>
  </lib>
  <lib desc="#Gates" name="1"/>
  <lib desc="#Plexers" name="2"/>
  <lib desc="#Arithmetic" name="3"/>
  <lib desc="#Memory" name="4"/>
  <lib desc="#I/O" name="5"/>
  <lib desc="#TTL" name="6"/>
  <lib desc="#TCL" name="7"/>
  <lib desc="#Base" name="8"/>
  <lib desc="#BFH-Praktika" name="9"/>
  <lib desc="#Input/Output-Extra" name="10"/>
  <lib desc="#Soc" name="11"/>
  <main name="main"/>
  <options>
    <a name="gateUndefined" val="ignore"/>
    <a name="simlimit" val="1000"/>
    <a name="simrand" val="0"/>
  </options>
  <mappings>
    <tool lib="8" map="Button2" name="Poke Tool"/>
    <tool lib="8" map="Button3" name="Menu Tool"/>
    <tool lib="8" map="Ctrl Button1" name="Menu Tool"/>
  </mappings>
  <toolbar>
    <tool lib="8" name="Poke Tool"/>
    <tool lib="8" name="Edit Tool"/>
    <tool lib="8" name="Wiring Tool"/>
    <tool lib="8" name="Text Tool"/>
    <sep/>
    <tool lib="0" name="Pin"/>
    <tool lib="0" name="Pin">
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
    </tool>
    <sep/>
    <tool lib="1" name="NOT Gate"/>
    <tool lib="1" name="AND Gate"/>
    <tool lib="1" name="OR Gate"/>
    <tool lib="1" name="XOR Gate"/>
    <tool lib="1" name="NAND Gate"/>
    <tool lib="1" name="NOR Gate"/>
    <sep/>
    <tool lib="4" name="D Flip-Flop"/>
    <tool lib="4" name="Register"/>
  </toolbar>
  <circuit name="main">
    <a name="appearance" val="logisim_evolution"/>
    <a name="circuit" val="main"/>
    <a name="circuitnamedboxfixedsize" val="true"/>
    <a name="downloadBoard" val="BASYS3"/>
    <a name="downloadFrequency" val="2000000.0"/>
    <a name="simulationFrequency" val="2048000.0"/>
    <boardmap boardname="BASYS3">
      <mc key="/CLK1" map="92,295"/>
      <mc key="/CLK100" map="321,237"/>
      <mc key="/CLK2" map="131,295"/>
      <mc key="/RST" map="78,323"/>
      <mc key="/RST2" map="117,323"/>
    </boardmap>
    <comp lib="0" loc="(370,340)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="label" val="RST2"/>
    </comp>
    <comp lib="0" loc="(390,190)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="label" val="CLK100"/>
    </comp>
    <comp lib="0" loc="(390,230)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="label" val="RST"/>
    </comp>
    <comp lib="0" loc="(640,210)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="facing" val="west"/>
      <a name="label" val="CLK1"/>
      <a name="output" val="true"/>
    </comp>
    <comp lib="0" loc="(640,320)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="facing" val="west"/>
      <a name="label" val="CLK2"/>
      <a name="output" val="true"/>
    </comp>
    <comp loc="(640,210)" name="divizor_exact">
      <a name="appearance" val="logisim_evolution"/>
      <a name="label" val="divizor_exact_1"/>
    </comp>
    <comp loc="(640,320)" name="divizor_f">
      <a name="appearance" val="logisim_evolution"/>
      <a name="label" val="divizor_f_1"/>
    </comp>
    <wire from="(370,340)" to="(420,340)"/>
    <wire from="(390,190)" to="(400,190)"/>
    <wire from="(390,230)" to="(420,230)"/>
    <wire from="(400,190)" to="(400,320)"/>
    <wire from="(400,190)" to="(420,190)"/>
    <wire from="(400,320)" to="(420,320)"/>
    <wire from="(420,190)" to="(420,210)"/>
  </circuit>
  <vhdl name="divizor_exact">LIBRARY ieee;&#13;
USE ieee.std_logic_1164.all;&#13;
USE ieee.std_logic_unsigned.all;

ENTITY divizor_exact is
	PORT (
		CLK_100D, RSTD : in std_logic;
		CLK_1D : out std_logic
	);
end divizor_exact;

ARCHITECTURE structr of divizor_exact is
	COMPONENT NUM_MOD IS
	  PORT (
		CLK_100 : in std_logic;
		RST: in std_logic;
	  	TOG: out std_logic
	    );
	END COMPONENT;
	COMPONENT BISTABIL_T is 
		PORT (
			CLK, T : in std_logic;
			Q : out std_logic
		);
	END COMPONENT;
	
	signal W1: std_logic;

begin
	D1 : NUM_MOD port map(CLK_100D, RSTD, W1);
	T1 : BISTABIL_T port map(CLK_100D, W1, CLK_1D);
end structr;




-- Numarator




LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_unsigned.all;
&#13;
ENTITY NUM_MOD IS&#13;
  PORT (&#13;
	CLK_100 : in std_logic;
	RST: in std_logic;
  	TOG: out std_logic
    );&#13;
END NUM_MOD;&#13;
&#13;
&#13;
ARCHITECTURE Comportamental OF NUM_MOD IS&#13;
&#13;
BEGIN&#13;
&#13;	process(CLK_100)
	variable count: std_logic_vector (25 downto 0) := (others =&gt; '0');
	constant modl: std_logic_vector (25 downto 0) := "10111110101111000010000000";--"10111110101111000010000000";
	begin
		if rising_edge(CLK_100) then
			if RST = '0' then
				count := (others =&gt; '0');
			else 
				count := count + 1;
			end if;
			
			if count = modl then
				count := (others =&gt; '0');
				TOG &lt;= '1';
			else
				TOG &lt;= '0';
			end if;
				
		end if;
		
	end process;
&#13;
END Comportamental;&#13;




-- Bistabil T



LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_unsigned.all;

ENTITY BISTABIL_T is 
	PORT (
		CLK, T : in std_logic;
		Q : out std_logic
	);
END BISTABIL_T;

ARCHITECTURE Comportamental of BISTABIL_T is
	signal tmp : std_logic := '0';
BEGIN
	process(CLK)
	begin
		if rising_edge(CLK) then
			if T = '1' then
				tmp &lt;= not tmp;
			else 
				tmp &lt;= tmp;
			end if;
			Q &lt;= tmp;
		end if;
	end process;
END Comportamental;
</vhdl>
  <vhdl name="BISTABIL_T">LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_unsigned.all;

ENTITY BISTABIL_T is 
	PORT (
		CLK, T : in std_logic;
		Q : out std_logic
	);
END BISTABIL_T;

ARCHITECTURE comportm of BISTABIL_T is
	signal tmp : std_logic := '0';
BEGIN
	process(CLK)
	begin
		if rising_edge(CLK) then
			if T = '1' then
				tmp &lt;= not tmp;
			else 
				tmp &lt;= tmp;
			end if;
			Q &lt;= tmp;
		end if;
	end process;
END comportm;</vhdl>
  <vhdl name="NUM_MOD">LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_unsigned.all;

ENTITY NUM_MOD IS
  PORT (
	CLK_100 : in std_logic;
	RST: in std_logic;
  	TOG: out std_logic
    );
END NUM_MOD;


ARCHITECTURE comportm OF NUM_MOD IS

BEGIN

	process(CLK_100)
	variable count: std_logic_vector (25 downto 0) := (others =&gt; '0');
	constant modl: std_logic_vector (25 downto 0) := "00000000000000000000000100";--"10111110101111000010000000";
	begin
		if rising_edge(CLK_100) then
			if RST = '0' then
				count := (others =&gt; '0');
			else 
				count := count + 1;
			end if;
			
			if count = modl then
				count := (others =&gt; '0');
				TOG &lt;= '1';
			else
				TOG &lt;= '0';
			end if;
				
		end if;
		
	end process;

END comportm;
</vhdl>
  <vhdl name="divizor_f">LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_unsigned.all;

ENTITY divizor_f IS
  PORT (
  	CLK_100: in std_logic;
  	RST: in std_logic;
  	CLK_1: out std_logic
	);
END divizor_f;


ARCHITECTURE comportm OF divizor_f IS

BEGIN

	process(CLK_100)
	variable nr: std_logic_vector (25 downto 0) := (others =&gt; '0');
	begin
		if rising_edge(CLK_100) then
			if RST = '0' then
				nr := (others =&gt; '0');
			else
				nr := nr + 1;
			end if;
		end if;
		CLK_1 &lt;= nr(25);
	end process;

END comportm;
</vhdl>
</project>
