<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project source="3.7.2" version="1.0">
  This file is intended to be loaded by Logisim-evolution v3.7.2(https://github.com/logisim-evolution/).

  <lib desc="#Wiring" name="0">
    <tool name="Pin">
      <a name="appearance" val="classic"/>
    </tool>
  </lib>
  <lib desc="#Gates" name="1"/>
  <lib desc="#Plexers" name="2"/>
  <lib desc="#Arithmetic" name="3"/>
  <lib desc="#Memory" name="4"/>
  <lib desc="#I/O" name="5"/>
  <lib desc="#TTL" name="6"/>
  <lib desc="#TCL" name="7"/>
  <lib desc="#Base" name="8"/>
  <lib desc="#BFH-Praktika" name="9"/>
  <lib desc="#Input/Output-Extra" name="10"/>
  <lib desc="#Soc" name="11"/>
  <main name="main"/>
  <options>
    <a name="gateUndefined" val="ignore"/>
    <a name="simlimit" val="1000"/>
    <a name="simrand" val="0"/>
  </options>
  <mappings>
    <tool lib="8" map="Button2" name="Menu Tool"/>
    <tool lib="8" map="Button3" name="Menu Tool"/>
    <tool lib="8" map="Ctrl Button1" name="Menu Tool"/>
  </mappings>
  <toolbar>
    <tool lib="8" name="Poke Tool"/>
    <tool lib="8" name="Edit Tool"/>
    <tool lib="8" name="Wiring Tool"/>
    <tool lib="8" name="Text Tool"/>
    <sep/>
    <tool lib="0" name="Pin"/>
    <tool lib="0" name="Pin">
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
    </tool>
    <sep/>
    <tool lib="1" name="NOT Gate"/>
    <tool lib="1" name="AND Gate"/>
    <tool lib="1" name="OR Gate"/>
    <tool lib="1" name="XOR Gate"/>
    <tool lib="1" name="NAND Gate"/>
    <tool lib="1" name="NOR Gate"/>
    <sep/>
    <tool lib="4" name="D Flip-Flop"/>
    <tool lib="4" name="Register"/>
  </toolbar>
  <circuit name="main">
    <a name="appearance" val="logisim_evolution"/>
    <a name="circuit" val="main"/>
    <a name="circuitnamedboxfixedsize" val="true"/>
    <a name="simulationFrequency" val="4.0"/>
    <comp lib="0" loc="(440,330)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="width" val="2"/>
    </comp>
    <comp lib="0" loc="(440,350)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="width" val="2"/>
    </comp>
    <comp lib="0" loc="(660,330)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
    </comp>
    <comp lib="0" loc="(660,350)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
    </comp>
    <comp lib="0" loc="(660,370)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
    </comp>
    <comp loc="(660,330)" name="comparator_2bit">
      <a name="appearance" val="logisim_evolution"/>
    </comp>
  </circuit>
  <vhdl name="comparator_2bit">LIBRARY ieee;
USE ieee.std_logic_1164.all;

ENTITY comparator_2bit IS
  PORT (
	a: in std_logic_vector(1 downto 0);
	b: in std_logic_vector(1 downto 0);
	mic, mare, egal: out std_logic
    );
END comparator_2bit;

--e1 and 2e = e
--m1 or (e1 and mic2) = m
--M1 or (e1 and M2) = M
ARCHITECTURE TypeArchitecture OF comparator_2bit IS
component ANDG is
	PORT (
	a,b: in std_logic;
	o: out std_logic
	);
end component;
component ORG is
	PORT (
	a,b: in std_logic;
	o: out std_logic
	);
end component;
component comparator_1bit IS
  PORT (
	a: in std_logic;
	b: in std_logic;
	mic, mare, egal: out std_logic
    );
END component;


signal w1, w2, m1, e1, g1, m2, e2, g2,e,g,m: std_logic;
BEGIN
CMP1: comparator_1bit port map(a(1), b(1), m1, g1, e1);
CMP2: comparator_1bit port map(a(0), b(0), m2, g2, e2);
ANDE: ANDG port map(e1, e2, egal);
AND1: ANDG port map(e1, m2, w1);
AND2: ANDG port map(e1, g2, w2);
OR1: ORG port map(g1,w2, mare);
OR2: ORG port map(m1, w1, mic);

END TypeArchitecture;




LIBRARY ieee;
USE ieee.std_logic_1164.all;
ENTITY ANDG is
	PORT (
	a,b: in std_logic;
	o: out std_logic
	);
end ANDG;

architecture flux of ANDG is
begin
	o &lt;= a and b;
end flux;


LIBRARY ieee;
USE ieee.std_logic_1164.all;
ENTITY ORG is
	PORT (
	a,b: in std_logic;
	o: out std_logic
	);
end ORG;

architecture flux of ORG is
begin
	o &lt;= a or b;
end flux;


LIBRARY ieee;&#13;
USE ieee.std_logic_1164.all;&#13;
&#13;
ENTITY comparator_1bit IS&#13;
  PORT (&#13;
	a: in std_logic;
	b: in std_logic;
	mic, mare, egal: out std_logic
    );&#13;
END comparator_1bit;&#13;

--e1 and 2e = e
--m1 or (e1 and mic2) = m
--M1 or (e1 and M2) = M
ARCHITECTURE TypeArchitecture OF comparator_1bit IS&#13;
&#13;
BEGIN&#13;
&#13;	process(a,b) 
	begin
		mic &lt;= '0';
		mare &lt;= '0';
		egal &lt;= '0';
		if a &gt; b then
			mare &lt;= '1';
		elsif a = b then
			egal &lt;= '1';
		else
			mic &lt;= '1';
		end if;
	end process;
&#13;
END TypeArchitecture;&#13;
</vhdl>
</project>
