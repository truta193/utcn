<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project source="3.7.2" version="1.0">
  This file is intended to be loaded by Logisim-evolution v3.7.2(https://github.com/logisim-evolution/).

  <lib desc="#Wiring" name="0">
    <tool name="Pin">
      <a name="appearance" val="classic"/>
    </tool>
  </lib>
  <lib desc="#Gates" name="1"/>
  <lib desc="#Plexers" name="2"/>
  <lib desc="#Arithmetic" name="3"/>
  <lib desc="#Memory" name="4"/>
  <lib desc="#I/O" name="5"/>
  <lib desc="#TTL" name="6"/>
  <lib desc="#TCL" name="7"/>
  <lib desc="#Base" name="8"/>
  <lib desc="#BFH-Praktika" name="9"/>
  <lib desc="#Input/Output-Extra" name="10"/>
  <lib desc="#Soc" name="11"/>
  <main name="main"/>
  <options>
    <a name="gateUndefined" val="ignore"/>
    <a name="simlimit" val="1000"/>
    <a name="simrand" val="0"/>
  </options>
  <mappings>
    <tool lib="8" map="Button2" name="Menu Tool"/>
    <tool lib="8" map="Button3" name="Menu Tool"/>
    <tool lib="8" map="Ctrl Button1" name="Menu Tool"/>
  </mappings>
  <toolbar>
    <tool lib="8" name="Poke Tool"/>
    <tool lib="8" name="Edit Tool"/>
    <tool lib="8" name="Wiring Tool"/>
    <tool lib="8" name="Text Tool"/>
    <sep/>
    <tool lib="0" name="Pin"/>
    <tool lib="0" name="Pin">
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
    </tool>
    <sep/>
    <tool lib="1" name="NOT Gate"/>
    <tool lib="1" name="AND Gate"/>
    <tool lib="1" name="OR Gate"/>
    <tool lib="1" name="XOR Gate"/>
    <tool lib="1" name="NAND Gate"/>
    <tool lib="1" name="NOR Gate"/>
    <sep/>
    <tool lib="4" name="D Flip-Flop"/>
    <tool lib="4" name="Register"/>
  </toolbar>
  <circuit name="main">
    <a name="appearance" val="logisim_evolution"/>
    <a name="circuit" val="main"/>
    <a name="circuitnamedboxfixedsize" val="true"/>
    <a name="simulationFrequency" val="1.0"/>
    <comp lib="0" loc="(230,200)" name="Clock"/>
    <comp lib="0" loc="(270,220)" name="Pin">
      <a name="appearance" val="NewPins"/>
    </comp>
    <comp lib="0" loc="(270,240)" name="Pin">
      <a name="appearance" val="NewPins"/>
    </comp>
    <comp lib="0" loc="(270,260)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="width" val="4"/>
    </comp>
    <comp lib="0" loc="(490,200)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
      <a name="width" val="4"/>
    </comp>
    <comp loc="(490,200)" name="fifo8x4">
      <a name="appearance" val="logisim_evolution"/>
    </comp>
    <wire from="(230,200)" to="(270,200)"/>
  </circuit>
  <vhdl name="fifo8x4">--------------------------------------------------------------------------------&#13;
-- Project :&#13;
-- File    :&#13;
-- Autor   :&#13;
-- Date    :&#13;
--&#13;
--------------------------------------------------------------------------------&#13;
-- Description :&#13;
--&#13;
--------------------------------------------------------------------------------&#13;
&#13;
LIBRARY ieee;&#13;
USE ieee.std_logic_1164.all;&#13;
&#13;
ENTITY fifo8x4 IS&#13;
  PORT (&#13;
	clk, push, pop: in std_logic;
	data_in : in std_logic_vector(3 downto 0);
	data_out : out std_logic_vector(3 downto 0)
    );&#13;
END fifo8x4;&#13;

&#13;
ARCHITECTURE TypeArchitecture OF fifo8x4 IS&#13;
&#13;type matrix is array(0 to 7) of std_logic_vector(3 downto 0);
signal memory : matrix := (others =&gt; "0000");
BEGIN&#13;
&#13;	process(clk)
	variable stack_pointer : integer := 0;
	begin
	if rising_edge(clk) then
		if push = '1' then
			stack_pointer := stack_pointer + 1;
			memory(stack_pointer) &lt;= data_in;
		elsif pop = '1' then
			stack_pointer := stack_pointer-1;
			if stack_pointer &lt; 0 then
				stack_pointer := 0;
			end if;
		end if;
		data_out &lt;= memory(stack_pointer);
	end if;
	end process;
&#13;
END TypeArchitecture;&#13;
</vhdl>
</project>
