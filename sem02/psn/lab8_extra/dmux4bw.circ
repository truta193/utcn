<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project source="3.7.2" version="1.0">
  This file is intended to be loaded by Logisim-evolution v3.7.2(https://github.com/logisim-evolution/).

  <lib desc="#Wiring" name="0">
    <tool name="Pin">
      <a name="appearance" val="classic"/>
    </tool>
  </lib>
  <lib desc="#Gates" name="1"/>
  <lib desc="#Plexers" name="2"/>
  <lib desc="#Arithmetic" name="3"/>
  <lib desc="#Memory" name="4"/>
  <lib desc="#I/O" name="5"/>
  <lib desc="#TTL" name="6"/>
  <lib desc="#TCL" name="7"/>
  <lib desc="#Base" name="8"/>
  <lib desc="#BFH-Praktika" name="9"/>
  <lib desc="#Input/Output-Extra" name="10"/>
  <lib desc="#Soc" name="11"/>
  <main name="main"/>
  <options>
    <a name="gateUndefined" val="ignore"/>
    <a name="simlimit" val="1000"/>
    <a name="simrand" val="0"/>
  </options>
  <mappings>
    <tool lib="8" map="Button2" name="Menu Tool"/>
    <tool lib="8" map="Button3" name="Menu Tool"/>
    <tool lib="8" map="Ctrl Button1" name="Menu Tool"/>
  </mappings>
  <toolbar>
    <tool lib="8" name="Poke Tool"/>
    <tool lib="8" name="Edit Tool"/>
    <tool lib="8" name="Wiring Tool"/>
    <tool lib="8" name="Text Tool"/>
    <sep/>
    <tool lib="0" name="Pin"/>
    <tool lib="0" name="Pin">
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
    </tool>
    <sep/>
    <tool lib="1" name="NOT Gate"/>
    <tool lib="1" name="AND Gate"/>
    <tool lib="1" name="OR Gate"/>
    <tool lib="1" name="XOR Gate"/>
    <tool lib="1" name="NAND Gate"/>
    <tool lib="1" name="NOR Gate"/>
    <sep/>
    <tool lib="4" name="D Flip-Flop"/>
    <tool lib="4" name="Register"/>
  </toolbar>
  <circuit name="main">
    <a name="appearance" val="logisim_evolution"/>
    <a name="circuit" val="main"/>
    <a name="circuitnamedboxfixedsize" val="true"/>
    <a name="simulationFrequency" val="2048000.0"/>
    <comp lib="0" loc="(1190,700)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
      <a name="width" val="4"/>
    </comp>
    <comp lib="0" loc="(1190,720)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
      <a name="width" val="4"/>
    </comp>
    <comp lib="0" loc="(1190,740)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
      <a name="width" val="4"/>
    </comp>
    <comp lib="0" loc="(1190,760)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
      <a name="width" val="4"/>
    </comp>
    <comp lib="0" loc="(1190,780)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
      <a name="width" val="4"/>
    </comp>
    <comp lib="0" loc="(1190,800)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
      <a name="width" val="4"/>
    </comp>
    <comp lib="0" loc="(1190,820)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
      <a name="width" val="4"/>
    </comp>
    <comp lib="0" loc="(1190,840)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
      <a name="width" val="4"/>
    </comp>
    <comp lib="0" loc="(240,420)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="width" val="3"/>
    </comp>
    <comp lib="0" loc="(430,310)" name="Pin">
      <a name="appearance" val="NewPins"/>
    </comp>
    <comp lib="0" loc="(430,400)" name="Pin">
      <a name="appearance" val="NewPins"/>
    </comp>
    <comp lib="0" loc="(430,480)" name="Pin">
      <a name="appearance" val="NewPins"/>
    </comp>
    <comp lib="0" loc="(430,570)" name="Pin">
      <a name="appearance" val="NewPins"/>
    </comp>
    <comp lib="0" loc="(650,310)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
      <a name="width" val="8"/>
    </comp>
    <comp lib="0" loc="(650,400)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
      <a name="width" val="8"/>
    </comp>
    <comp lib="0" loc="(650,480)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
      <a name="width" val="8"/>
    </comp>
    <comp lib="0" loc="(650,570)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
      <a name="width" val="8"/>
    </comp>
    <comp lib="0" loc="(970,700)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="width" val="4"/>
    </comp>
    <comp lib="0" loc="(970,720)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="width" val="3"/>
    </comp>
    <comp loc="(1190,700)" name="dmux4">
      <a name="appearance" val="logisim_evolution"/>
    </comp>
    <comp loc="(650,310)" name="dmux">
      <a name="appearance" val="logisim_evolution"/>
      <a name="labelvisible" val="true"/>
    </comp>
    <comp loc="(650,400)" name="dmux">
      <a name="appearance" val="logisim_evolution"/>
      <a name="labelvisible" val="true"/>
    </comp>
    <comp loc="(650,480)" name="dmux">
      <a name="appearance" val="logisim_evolution"/>
    </comp>
    <comp loc="(650,570)" name="dmux">
      <a name="appearance" val="logisim_evolution"/>
    </comp>
    <wire from="(240,420)" to="(350,420)"/>
    <wire from="(350,330)" to="(350,420)"/>
    <wire from="(350,330)" to="(430,330)"/>
    <wire from="(350,420)" to="(350,500)"/>
    <wire from="(350,420)" to="(430,420)"/>
    <wire from="(350,500)" to="(350,590)"/>
    <wire from="(350,500)" to="(430,500)"/>
    <wire from="(350,590)" to="(430,590)"/>
  </circuit>
  <vhdl name="dmux4">--------------------------------------------------------------------------------&#13;
-- Project :&#13;
-- File    :&#13;
-- Autor   :&#13;
-- Date    :&#13;
--&#13;
--------------------------------------------------------------------------------&#13;
-- Description :&#13;
--&#13;
--------------------------------------------------------------------------------&#13;
&#13;
LIBRARY ieee;&#13;
USE ieee.std_logic_1164.all;&#13;
&#13;
ENTITY dmux4 IS&#13;
  PORT (&#13;
  	inp: in std_logic_vector(3 downto 0);
  	sel: in std_logic_vector(2 downto 0);
  	out0: out std_logic_vector(3 downto 0);
  	out1: out std_logic_vector(3 downto 0);
  	out2: out std_logic_vector(3 downto 0);
  	out3: out std_logic_vector(3 downto 0);
  	out4: out std_logic_vector(3 downto 0);
  	out5: out std_logic_vector(3 downto 0);
  	out6: out std_logic_vector(3 downto 0);
  	out7: out std_logic_vector(3 downto 0)
    );&#13;
END dmux4;&#13;
&#13;
--------------------------------------------------------------------------------&#13;
--Complete your VHDL description below&#13;
--------------------------------------------------------------------------------&#13;
&#13;
ARCHITECTURE Structural OF dmux4 IS&#13;
	&#13;component dmux IS
	  PORT (
	  	inpt: in std_logic;
		sel: in std_logic_vector(2 downto 0);
	  	outp: out std_logic_vector(7 downto 0)
	    );
	END component;
	signal stream1: std_logic_vector(7 downto 0);
	signal stream2: std_logic_vector(7 downto 0);
	signal stream3: std_logic_vector(7 downto 0);
	signal stream4: std_logic_vector(7 downto 0);
	
	signal streama: std_logic_vector(3 downto 0);
	signal streamb: std_logic_vector(3 downto 0);
	signal streamc: std_logic_vector(3 downto 0);
	signal streamd: std_logic_vector(3 downto 0);
	signal streame: std_logic_vector(3 downto 0);
	signal streamf: std_logic_vector(3 downto 0);
	signal streamg: std_logic_vector(3 downto 0);
	signal streamh: std_logic_vector(3 downto 0);
BEGIN&#13;
&#13;D1: dmux port map (inp(3), sel, stream1);

D2: dmux port map (inp(2), sel, stream2);

D3: dmux port map (inp(1), sel, stream3);

D4: dmux port map (inp(0), sel, stream4);

streama &lt;= stream4(7) &amp; stream3(7) &amp; stream2(7) &amp; stream1(7);
streamb &lt;= stream4(6) &amp; stream3(6) &amp; stream2(6) &amp; stream1(6);
streamc &lt;= stream4(5) &amp; stream3(5) &amp; stream2(5) &amp; stream1(5);
streamd &lt;= stream4(4) &amp; stream3(4) &amp; stream2(4) &amp; stream1(4);
streame &lt;= stream4(3) &amp; stream3(3) &amp; stream2(3) &amp; stream1(3);
streamf &lt;= stream4(2) &amp; stream3(2) &amp; stream2(2) &amp; stream1(2);
streamg &lt;= stream4(1) &amp; stream3(1) &amp; stream2(1) &amp; stream1(1);
streamh &lt;= stream4(0) &amp; stream3(0) &amp; stream2(0) &amp; stream1(0);

--Fiecare output s-ar seta cu cate o ecuatie dar nu stiu cum sa fac pe 4 biti, ce am incercat nu a functionat :(
out0 &lt;= streama and not(sel(2)) and not(sel(1)) and not(sel(0));
out1 &lt;= streamb and not(sel(2)) and not(sel(1)) and (sel(0));
out2 &lt;= streamc and not(sel(2)) and (sel(1)) and not(sel(0));
out3 &lt;= streamd and not(sel(2)) and (sel(1)) and (sel(0));
out4 &lt;= streame and (sel(2)) and not(sel(1)) and not(sel(0));
out5 &lt;= streamf and (sel(2)) and not(sel(1)) and (sel(0));
out6 &lt;= streamg and (sel(2)) and (sel(1)) and not(sel(0));
out7 &lt;= streamh and (sel(2)) and (sel(1)) and (sel(0));
&#13;
END Structural;&#13;





LIBRARY ieee;
USE ieee.std_logic_1164.all;

ENTITY dmux IS
  PORT (
  	inpt: in std_logic;
	sel: in std_logic_vector(2 downto 0);
  	outp: out std_logic_vector(7 downto 0)
    );
END dmux;

--------------------------------------------------------------------------------
--Complete your VHDL description below
--------------------------------------------------------------------------------

ARCHITECTURE TypeArchitecture OF dmux IS

BEGIN

	outp(0) &lt;= inpt and not(sel(2)) and not(sel(1)) and not(sel(0));
	outp(1) &lt;= inpt and not(sel(2)) and not(sel(1)) and (sel(0));
	outp(2) &lt;= inpt and not(sel(2)) and (sel(1)) and not(sel(0));
	outp(3) &lt;= inpt and not(sel(2)) and (sel(1)) and (sel(0));
	outp(4) &lt;= inpt and (sel(2)) and not(sel(1)) and not(sel(0));
	outp(5) &lt;= inpt and (sel(2)) and not(sel(1)) and (sel(0));
	outp(6) &lt;= inpt and (sel(2)) and (sel(1)) and not(sel(0));
	outp(7) &lt;= inpt and (sel(2)) and (sel(1)) and (sel(0));

END TypeArchitecture;
</vhdl>
  <vhdl name="dmux">LIBRARY ieee;
USE ieee.std_logic_1164.all;

ENTITY dmux IS
  PORT (
  	inpt: in std_logic;
	sel: in std_logic_vector(2 downto 0);
  	outp: out std_logic_vector(7 downto 0)
    );
END dmux;

--------------------------------------------------------------------------------
--Complete your VHDL description below
--------------------------------------------------------------------------------

ARCHITECTURE TypeArchitecture OF dmux IS

BEGIN

	outp(0) &lt;= inpt and not(sel(2)) and not(sel(1)) and not(sel(0));
	outp(1) &lt;= inpt and not(sel(2)) and not(sel(1)) and (sel(0));
	outp(2) &lt;= inpt and not(sel(2)) and (sel(1)) and not(sel(0));
	outp(3) &lt;= inpt and not(sel(2)) and (sel(1)) and (sel(0));
	outp(4) &lt;= inpt and (sel(2)) and not(sel(1)) and not(sel(0));
	outp(5) &lt;= inpt and (sel(2)) and not(sel(1)) and (sel(0));
	outp(6) &lt;= inpt and (sel(2)) and (sel(1)) and not(sel(0));
	outp(7) &lt;= inpt and (sel(2)) and (sel(1)) and (sel(0));

END TypeArchitecture;
</vhdl>
</project>
