<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project source="3.7.2" version="1.0">
  This file is intended to be loaded by Logisim-evolution v3.7.2(https://github.com/logisim-evolution/).

  <lib desc="#Wiring" name="0">
    <tool name="Pin">
      <a name="appearance" val="classic"/>
    </tool>
  </lib>
  <lib desc="#Gates" name="1"/>
  <lib desc="#Plexers" name="2"/>
  <lib desc="#Arithmetic" name="3"/>
  <lib desc="#Memory" name="4"/>
  <lib desc="#I/O" name="5"/>
  <lib desc="#TTL" name="6"/>
  <lib desc="#TCL" name="7"/>
  <lib desc="#Base" name="8"/>
  <lib desc="#BFH-Praktika" name="9"/>
  <lib desc="#Input/Output-Extra" name="10"/>
  <lib desc="#Soc" name="11"/>
  <main name="main"/>
  <options>
    <a name="gateUndefined" val="ignore"/>
    <a name="simlimit" val="1000"/>
    <a name="simrand" val="0"/>
  </options>
  <mappings>
    <tool lib="8" map="Button2" name="Menu Tool"/>
    <tool lib="8" map="Button3" name="Menu Tool"/>
    <tool lib="8" map="Ctrl Button1" name="Menu Tool"/>
  </mappings>
  <toolbar>
    <tool lib="8" name="Poke Tool"/>
    <tool lib="8" name="Edit Tool"/>
    <tool lib="8" name="Wiring Tool"/>
    <tool lib="8" name="Text Tool"/>
    <sep/>
    <tool lib="0" name="Pin"/>
    <tool lib="0" name="Pin">
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
    </tool>
    <sep/>
    <tool lib="1" name="NOT Gate"/>
    <tool lib="1" name="AND Gate"/>
    <tool lib="1" name="OR Gate"/>
    <tool lib="1" name="XOR Gate"/>
    <tool lib="1" name="NAND Gate"/>
    <tool lib="1" name="NOR Gate"/>
    <sep/>
    <tool lib="4" name="D Flip-Flop"/>
    <tool lib="4" name="Register"/>
  </toolbar>
  <circuit name="main">
    <a name="appearance" val="logisim_evolution"/>
    <a name="circuit" val="main"/>
    <a name="circuitnamedboxfixedsize" val="true"/>
    <a name="simulationFrequency" val="2048000.0"/>
    <comp lib="0" loc="(1080,530)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
      <a name="width" val="4"/>
    </comp>
    <comp lib="0" loc="(120,390)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="width" val="3"/>
    </comp>
    <comp lib="0" loc="(180,290)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="width" val="8"/>
    </comp>
    <comp lib="0" loc="(190,200)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="width" val="8"/>
    </comp>
    <comp lib="0" loc="(210,360)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="width" val="8"/>
    </comp>
    <comp lib="0" loc="(220,470)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="width" val="8"/>
    </comp>
    <comp lib="0" loc="(860,530)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="width" val="4"/>
    </comp>
    <comp lib="0" loc="(860,550)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="width" val="4"/>
    </comp>
    <comp lib="0" loc="(860,570)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="width" val="4"/>
    </comp>
    <comp lib="0" loc="(860,590)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="width" val="4"/>
    </comp>
    <comp lib="0" loc="(860,610)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="width" val="4"/>
    </comp>
    <comp lib="0" loc="(860,630)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="width" val="4"/>
    </comp>
    <comp lib="0" loc="(860,650)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="width" val="4"/>
    </comp>
    <comp lib="0" loc="(860,670)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="width" val="4"/>
    </comp>
    <comp lib="0" loc="(860,690)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="width" val="3"/>
    </comp>
    <comp loc="(1080,530)" name="mux4">
      <a name="appearance" val="logisim_evolution"/>
    </comp>
    <comp loc="(530,200)" name="mux">
      <a name="appearance" val="logisim_evolution"/>
    </comp>
    <comp loc="(530,290)" name="mux">
      <a name="appearance" val="logisim_evolution"/>
    </comp>
    <comp loc="(530,380)" name="mux">
      <a name="appearance" val="logisim_evolution"/>
    </comp>
    <comp loc="(530,470)" name="mux">
      <a name="appearance" val="logisim_evolution"/>
    </comp>
    <wire from="(120,390)" to="(280,390)"/>
    <wire from="(180,290)" to="(310,290)"/>
    <wire from="(190,200)" to="(310,200)"/>
    <wire from="(210,360)" to="(310,360)"/>
    <wire from="(220,470)" to="(310,470)"/>
    <wire from="(280,220)" to="(280,310)"/>
    <wire from="(280,220)" to="(310,220)"/>
    <wire from="(280,310)" to="(280,390)"/>
    <wire from="(280,310)" to="(310,310)"/>
    <wire from="(280,390)" to="(280,400)"/>
    <wire from="(280,400)" to="(280,490)"/>
    <wire from="(280,400)" to="(310,400)"/>
    <wire from="(280,490)" to="(310,490)"/>
    <wire from="(310,360)" to="(310,380)"/>
  </circuit>
  <vhdl name="mux">LIBRARY ieee;
USE ieee.std_logic_1164.all;

ENTITY mux IS
  PORT (
	inpt: in std_logic_vector(7 downto 0);
	sel: in std_logic_vector(2 downto 0);
	outp: out std_logic
    );
END mux;

ARCHITECTURE TypeArchitecture OF mux IS

BEGIN
--	with sel select outp &lt;=
--		inpt(0) when "000";

	outp &lt;= inpt(0) when sel = "000" else
		inpt(1) when sel = "001" else
	 	inpt(2) when sel = "010" else 
	 	inpt(3) when sel = "011" else
	 	inpt(4) when sel = "100" else
	 	inpt(5) when sel = "101" else
	 	inpt(6) when sel = "110" else
	 	inpt(7) when sel = "111";

END TypeArchitecture;
</vhdl>
  <vhdl name="mux4">--------------------------------------------------------------------------------&#13;
-- Project :&#13;
-- File    :&#13;
-- Autor   :&#13;
-- Date    :&#13;
--&#13;
--------------------------------------------------------------------------------&#13;
-- Description :&#13;
--&#13;
--------------------------------------------------------------------------------&#13;
&#13;
LIBRARY ieee;&#13;
USE ieee.std_logic_1164.all;&#13;
&#13;
ENTITY mux4 IS&#13;
  PORT (&#13;
  	in0: in std_logic_vector(3 downto 0);
  	in1: in std_logic_vector(3 downto 0);
  	in2: in std_logic_vector(3 downto 0);
  	in3: in std_logic_vector(3 downto 0);
  	in4: in std_logic_vector(3 downto 0);
  	in5: in std_logic_vector(3 downto 0);
  	in6: in std_logic_vector(3 downto 0);
  	in7: in std_logic_vector(3 downto 0);
  	sel: in std_logic_vector(2 downto 0);
  	outp: out std_logic_vector(3 downto 0)
    );&#13;
END mux4;&#13;
&#13;

ARCHITECTURE TypeArchitecture OF mux4 IS&#13;
	component mux IS
	  PORT (
		inpt: in std_logic_vector(7 downto 0);
		sel: in std_logic_vector(2 downto 0);
		outp: out std_logic
	    );
	END component;
&#13;	signal stream4: std_logic_vector(7 downto 0);
	signal stream3: std_logic_vector(7 downto 0);
	signal stream2: std_logic_vector(7 downto 0);
	signal stream1: std_logic_vector(7 downto 0);
BEGIN&#13;
	stream4 &lt;= in7(3) &amp; in6(3) &amp; in5(3) &amp; in4(3) &amp; in3(3) &amp; in2(3) &amp; in1(3) &amp; in0(3);
	stream3 &lt;= in7(2) &amp; in6(2) &amp; in5(2) &amp; in4(2) &amp; in3(2) &amp; in2(2) &amp; in1(2) &amp; in0(2);
	stream2 &lt;= in7(1) &amp; in6(1) &amp; in5(1) &amp; in4(1) &amp; in3(1) &amp; in2(1) &amp; in1(1) &amp; in0(1);
	stream1 &lt;= in7(0) &amp; in6(0) &amp; in5(0) &amp; in4(0) &amp; in3(0) &amp; in2(0) &amp; in1(0) &amp; in0(0);
	M1 : mux port map (stream4, sel, outp(3));
	M2 : mux port map (stream3, sel, outp(2));
	M3 : mux port map (stream2, sel, outp(1));
	M4 : mux port map (stream1, sel, outp(0));
&#13;
END TypeArchitecture;&#13;


LIBRARY ieee;
USE ieee.std_logic_1164.all;

ENTITY mux IS
  PORT (
	inpt: in std_logic_vector(7 downto 0);
	sel: in std_logic_vector(2 downto 0);
	outp: out std_logic
    );
END mux;

ARCHITECTURE TypeArchitecture OF mux IS

BEGIN

	outp &lt;= inpt(0) when sel = "000" else
		inpt(1) when sel = "001" else
	 	inpt(2) when sel = "010" else 
	 	inpt(3) when sel = "011" else
	 	inpt(4) when sel = "100" else
	 	inpt(5) when sel = "101" else
	 	inpt(6) when sel = "110" else
	 	inpt(7) when sel = "111";

END TypeArchitecture;

</vhdl>
</project>
